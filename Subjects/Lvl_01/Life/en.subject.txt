
--------------------------------------------------------------------------------
Assignment name  : life
Expected files   : *.c *.h
Allowed functions: atoi, read, putchar, malloc, calloc, realloc, free
--------------------------------------------------------------------------------

You must write a program that will simulate a game of life.

The prototype of this program is:
    ./life width height iterations

- width and height are the dimensions of the board.
- iterations is the number of iterations of the game of life.

The initial configuration of the board will be drawn by a sequence of commands
read from standard input.  
Imagine a pen starting in the top-left corner of the board.

Commands:
    w a s d -> move the pen up, left, down, and right.
    x       -> lift or lower the pen to start or stop drawing.

Once EOF is reached, your program must simulate the game of life on this board
and print the result to stdout.

Output:
- Each alive cell is represented by the character 'O'.
- Each dead cell is represented by a space.
- Each cell outside of the board is considered dead.

Rules of the game:
- Any live cell with fewer than two live neighbours dies (underpopulation).
- Any live cell with two or three live neighbours lives on.
- Any live cell with more than three live neighbours dies (overpopulation).
- Any dead cell with exactly three live neighbours becomes a live cell (reproduction).

Example:
$> echo 'sdxddssaaww' | ./life 5 5 0 | cat -e
     $
 OOO $
 O O $
 OOO $
     $

$> echo 'dxss' | ./life 3 3 1 | cat -e
   $
 OOO$
   $
